<?xml version="1.0"?>
<project name="ss7.release.sf" default="release" basedir=".">
    <property environment="sys"/>
    <property name="release.dir" location="${ant.file.ss7.release.sf}/../target"/>
    <property name="base.dir" location="${ant.file.ss7.release.sf}/.."/>
    <property name="checkout.asn.dir" value="${base.dir}/checkout/asn"/>
    <property name="checkout.sctp.dir" value="${base.dir}/checkout/sctp"/>
    <property name="restcomm.jss7.dist" value="${release.dir}/restcomm-jss7-dist"/>
    <property name="jss7.addon" value="${release.dir}/jss7-addon"/>
    <property name="jss7.dir" value="${base.dir}/.."/>
    <property name="docs.dir" location="${restcomm.jss7.dist}/_docs"/>

    <!--Versions -->
    <property name="checkout.asn.version" value="2.1.5"/>
    <property name="checkout.sctp.version" value="1.8.15"/>
    <property name="release.version" value="${jSS7.release.version}"/>


    <condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
        <os family="windows"/>
    </condition>

    <taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${ant.file.ss7.release.sf}/../ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <target name="release"
            depends="clean,build-asn,build-sctp,build-jss7,build-docs,copy-asn,copy-sctp,copy-jss7,copy-documentation,make-final-zip"/>

    <target name="release-restcomm"
            depends="clean,build-asn,build-sctp,build-docs,copy-asn,copy-sctp,copy-jss7,copy-documentation,make-final-zip"/>


    <!-- Build dependencies-->

    <target name="build-asn">
        <echo>Building ASN</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone"/>
            <arg value="https://github.com/Restcomm/jasn/"/>
            <arg value="-b"/>
            <arg value="${checkout.asn.version}"/>
            <arg value="${checkout.asn.dir}"/>
        </exec>

        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.asn.dir}">
            <arg line="clean install -Dmaven.test.skip=true -Pall"/>
        </exec>
    </target>

    <target name="build-sctp">
        <echo>Building SCTP</echo>

        <exec failonerror="true" executable="git">
            <arg value="clone"/>
            <arg value="https://github.com/Restcomm/sctp"/>
            <arg value="-b"/>
            <arg value="${checkout.sctp.version}"/>
            <arg value="${checkout.sctp.dir}"/>
        </exec>

        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.sctp.dir}">
            <arg line="clean install -Dmaven.test.skip=true -Prelease,all"/>
        </exec>
    </target>

    <target name="copy-asn">
        <echo>Copy ASN</echo>
        <copy todir="${restcomm.jss7.dist}/asn/" failonerror="true">
            <fileset dir="${checkout.asn.dir}/asn-impl/target/">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-sctp">
        <echo>Copy SCTP</echo>
        <copy todir="${restcomm.jss7.dist}/sctp/" failonerror="true">
            <fileset dir="${checkout.sctp.dir}/sctp-impl/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${checkout.sctp.dir}/sctp-api/target/">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>


    <target name="copy-jss7">
        <echo>Copy SS7 Simulator</echo>
        <copy todir="${restcomm.jss7.dist}/ss7/restcomm-ss7-simulator" failonerror="true">
            <fileset dir="${jss7.dir}/tools/simulator/bootstrap/target/simulator-ss7">
                <include name="**"/>
            </fileset>
        </copy>

        <echo>Copy SS7 - SWG</echo>
        <copy todir="${restcomm.jss7.dist}/ss7-jboss/restcomm-ss7-sgw" failonerror="true">
            <fileset dir="${jss7.dir}/sgw/boot/target/restcomm-sgw">
                <include name="**"/>
            </fileset>
        </copy>

        <!-- echo>Copy SS7 native libs</echo>
        <copy todir="${restcomm.jss7.dist}/ss7/native" failonerror="true">
                <fileset dir="${jss7.dir}/sgw/boot/target/restcomm-sgw/native">
                        <include name="**" />
                </fileset>
        </copy -->

        <echo>Copy Protocols</echo>
        <copy todir="${restcomm.jss7.dist}/ss7/protocols" failonerror="true">
            <fileset dir="${jss7.dir}/tcap/tcap-api/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/tcap/tcap-impl/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/map/map-api/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/map/map-impl/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/cap/cap-api/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/cap/cap-impl/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/isup/isup-api/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/isup/isup-impl/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/inap/inap-api/target/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${jss7.dir}/inap/inap-impl/target/">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <echo>Copy Parser</echo>
        <copy todir="${restcomm.jss7.dist}/ss7/restcomm-ss7-traceparser" failonerror="true">
            <fileset dir="${jss7.dir}/tools/trace-parser/bootstrap/target/traceparser-ss7">
                <include name="**"/>
            </fileset>
        </copy>


        <echo>Copy Shell</echo>
        <copy todir="${restcomm.jss7.dist}/ss7/shell/lib" failonerror="true">
            <fileset dir="${jss7.dir}/management/shell-client/target/restcomm-cli/lib">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${restcomm.jss7.dist}/ss7/shell/bin" failonerror="true">
            <fileset dir="${jss7.dir}/management/shell-client/target/restcomm-cli/bin">
                <include name="**"/>
            </fileset>
        </copy>
        <copy file="${jss7.dir}/hardware/cli/target/linkset-cli.jar" todir="${restcomm.jss7.dist}/ss7/shell/lib"
              failonerror="true"/>
        <copy file="${jss7.dir}/m3ua/cli/m3ua/target/m3ua-cli-m3ua.jar" todir="${restcomm.jss7.dist}/ss7/shell/lib"
              failonerror="true"/>
        <copy file="${jss7.dir}/m3ua/cli/sctp/target/m3ua-cli-sctp.jar" todir="${restcomm.jss7.dist}/ss7/shell/lib"
              failonerror="true"/>
        <copy file="${jss7.dir}/sccp/sccp-cli/target/sccp-cli.jar" todir="${restcomm.jss7.dist}/ss7/shell/lib"
              failonerror="true"/>
        <copy file="${jss7.dir}/tcap/tcap-cli/target/tcap-cli.jar" todir="${restcomm.jss7.dist}/ss7/shell/lib"
              failonerror="true"/>

        <!-- Copy files for deploying/undeployng jSS7 to JBoss 5 and WildFly -->
        <copy file="${jss7.dir}/release/release-build-jboss5.xml" tofile="${restcomm.jss7.dist}/ss7-jboss/build.xml"
              failonerror="true"/>

    	<copy file="${jss7.dir}/release/release-build-wildfly.xml" tofile="${restcomm.jss7.dist}/ss7-wildfly/build.xml"
              failonerror="true"/>
        <copy file="${jss7.dir}/release/wildfly-jss7-subsystem.txt" tofile="${restcomm.jss7.dist}/ss7-wildfly/template/wildfly-jss7-subsystem.txt"
              failonerror="true"/>
        <copy file="${jss7.dir}/release/security-domains.txt" tofile="${restcomm.jss7.dist}/ss7-wildfly/template/security-domains.txt"
              failonerror="true"/>
        <copy file="${jss7.dir}/release/deployment_manual.txt" tofile="${restcomm.jss7.dist}/ss7-wildfly/deployment_manual.txt"
              failonerror="true"/>
        <copy file="${jss7.dir}/release/jmx-roles.properties" tofile="${restcomm.jss7.dist}/ss7-wildfly/template/jmx-roles.properties"
              failonerror="true"/>
        <copy file="${jss7.dir}/release/jmx-users.properties" tofile="${restcomm.jss7.dist}/ss7-wildfly/template/jmx-users.properties"
              failonerror="true"/>
    	<copy file="${jss7.dir}/release/xmltask.jar" tofile="${restcomm.jss7.dist}/ss7-wildfly/xmltask.jar"
              failonerror="true"/>

        <!-- Copy templates for JBoss 5 -->
        <copy todir="${restcomm.jss7.dist}/ss7-jboss/template/META-INF-dialogic/" failonerror="true">
            <fileset dir="${jss7.dir}/service/jboss/src/main/config-dialogic">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${restcomm.jss7.dist}/ss7-jboss/template/META-INF-m3ua-dialogic/" failonerror="true">
            <fileset dir="${jss7.dir}/service/jboss/src/main/config-m3ua-dialogic">
                <include name="**"/>
            </fileset>
        </copy>

<!--
        <copy todir="${restcomm.jss7.dist}/ss7-jboss/template/log4j/" failonerror="true">
            <fileset dir="${jss7.dir}/service/jboss/src/main/log4j">
                <include name="**" />
            </fileset>
        </copy>
-->

        <!-- Copy RestComm SS7 Service for JBoss 5 -->
        <copy todir="${restcomm.jss7.dist}/ss7-jboss/restcomm-ss7-service" failonerror="true">
            <fileset dir="${jss7.dir}/service/jboss/target/restcomm-ss7-service">
                <include name="**"/>
            </fileset>
        </copy>

        <!-- Copy RestComm SS7 Service for WildFly -->
        <copy todir="${restcomm.jss7.dist}/ss7-wildfly/restcomm-ss7-service/extension" failonerror="true">
            <fileset dir="${jss7.dir}/service/wildfly/extension/target/module">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${restcomm.jss7.dist}/ss7-wildfly/restcomm-ss7-service/modules" failonerror="true">
            <fileset dir="${jss7.dir}/service/wildfly/modules/target/module">
                <include name="**"/>
            </fileset>
        </copy>

        <echo>Copy OAM ui</echo>
        <copy todir="${restcomm.jss7.dist}/oam/new-ui" failonerror="true">
            <fileset dir="${jss7.dir}/oam/new-ui/target/">
                <include name="*.war"/>
            </fileset>
        </copy>

        <echo>Copy Modified Jolokia War</echo>
        <copy file="./jolokia.war" todir="${restcomm.jss7.dist}/oam/new-ui" failonerror="true"/>
    </target>

    <target name="build-jss7">
        <exec failonerror="true" executable="${mvn.executable}" dir="${base.dir}/../">
            <arg line="clean install -Dmaven.test.skip=true"/>
        </exec>
    </target>

    <target name="build-docs">
        <exec failonerror="true" executable="${mvn.executable}" dir="${base.dir}/../docs">
            <arg line="clean install -Prestcomm -Pall"/>
        </exec>
    </target>


    <target name="make-final-zip" depends="set-time-stamp">
        <zip destfile="${base.dir}/restcomm-jss7-${release.version}.zip" filesonly="false">
            <zipfileset dir="${restcomm.jss7.dist}" prefix="restcomm-jss7-${release.version}">
                <include name="**"/>
            </zipfileset>
        </zip>
    </target>

    <target name="set-time-stamp" unless="skip.timestamp">
        <tstamp>
            <format property="time.stamp" pattern="yyMMddHHmm"/>
        </tstamp>
    </target>

    <target name="copy-documentation">
        <echo>copying documentation</echo>
        <mkdir dir="${docs.dir}"/>

        <mkdir dir="${docs.dir}/ASNLibrary"/>
        <mkdir dir="${docs.dir}/ASNLibrary/html-book"/>
        <copy todir="${docs.dir}/ASNLibrary/html-book" failonerror="true">
            <fileset dir="${checkout.asn.dir}/docs/sources-asciidoc/target/generated-docs/html-book/">
                <include name="**"/>
            </fileset>
        </copy>
        <mkdir dir="${docs.dir}/ASNLibrary/pdf"/>
        <copy todir="${docs.dir}/ASNLibrary/pdf" failonerror="true">
            <fileset dir="${checkout.asn.dir}/docs/sources-asciidoc/target/generated-docs/pdf/">
                <include name="**.pdf"/>
            </fileset>
        </copy>

        <mkdir dir="${docs.dir}/SCTPLibrary"/>
        <mkdir dir="${docs.dir}/SCTPLibrary/html-book"/>
        <copy todir="${docs.dir}/SCTPLibrary/html-book" failonerror="true">
            <fileset dir="${checkout.sctp.dir}/docs/sources-asciidoc/target/generated-docs/html-book/">
                <include name="**"/>
            </fileset>
        </copy>
        <mkdir dir="${docs.dir}/SCTPLibrary/pdf"/>
        <copy todir="${docs.dir}/SCTPLibrary/pdf" failonerror="true">
            <fileset dir="${checkout.sctp.dir}/docs/sources-asciidoc/target/generated-docs/pdf/">
                <include name="**.pdf"/>
            </fileset>
        </copy>

        <!--
        <copy todir="${docs.dir}" failonerror="true">
            <fileset dir="${checkout.asn.dir}/docs/jdocbook-mobicents/target/docbook/publish/en-US/pdf">
                    <include name="*.pdf" />
            </fileset>
        </copy>
        <copy todir="${docs.dir}" failonerror="true">
            <fileset dir="${checkout.sctp.dir}/docs/jdocbook-mobicents/target/docbook/publish/en-US/pdf">
                    <include name="*.pdf" />
            </fileset>
        </copy>
        -->

        <mkdir dir="${docs.dir}/userguide"/>
        <mkdir dir="${docs.dir}/installationguide"/>
        <mkdir dir="${docs.dir}/userguide/html-book"/>
        <copy todir="${docs.dir}/userguide/html-book" failonerror="true">
            <fileset dir="${jss7.dir}/docs/userguide/sources-asciidoc/target/generated-docs/html-book/">
                <include name="**"/>
            </fileset>
        </copy>
        <mkdir dir="${docs.dir}/installationguide/html-book"/>
        <copy todir="${docs.dir}/installationguide/html-book" failonerror="true">
            <fileset dir="${jss7.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/html-book/">
                <include name="**"/>
            </fileset>
        </copy>
        <mkdir dir="${docs.dir}/userguide/pdf"/>
        <copy todir="${docs.dir}/userguide/pdf" failonerror="true">
            <fileset dir="${jss7.dir}/docs/userguide/sources-asciidoc/target/generated-docs/pdf/">
                <include name="**.pdf"/>
            </fileset>
        </copy>
        <mkdir dir="${docs.dir}/installationguide/pdf"/>
        <copy todir="${docs.dir}/installationguide/pdf" failonerror="true">
            <fileset dir="${jss7.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/pdf/">
                <include name="**.pdf"/>
            </fileset>
        </copy>

        <!--
        <copy todir="${docs.dir}" failonerror="true">
            <fileset dir="${jss7.dir}/docs/userguide/jdocbook-restcomm/target/docbook/publish/en-US/pdf">
                    <include name="*.pdf" />
            </fileset>
        </copy
        <copy todir="${docs.dir}" failonerror="true">
            <fileset dir="${jss7.dir}/docs/releasenotes/jdocbook-restcomm/target/docbook/publish/en-US/pdf">
                    <include name="*.pdf" />
            </fileset>
        </copy>
        copy todir="${docs.dir}" failonerror="true">
            <fileset dir="${jss7.dir}/docs/installationguide/jdocbook-restcomm/target/docbook/publish/en-US/pdf">
                    <include name="*.pdf" />
            </fileset>
        </copy>
        -->
    </target>


    <target name="clean">
        <delete dir="${release.dir}"/>
        <delete dir="${base.dir}/checkout"/>
		<delete>
			<fileset dir="${base.dir}">
				<include name="restcomm-jss7-*.*" />
			</fileset>
		</delete>
    </target>

</project>
